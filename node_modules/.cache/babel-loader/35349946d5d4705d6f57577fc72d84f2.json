{"ast":null,"code":"import _classCallCheck from \"/Users/deeppatel/Desktop/Visualization/Project/csci6406_project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/deeppatel/Desktop/Visualization/Project/csci6406_project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/deeppatel/Desktop/Visualization/Project/csci6406_project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/deeppatel/Desktop/Visualization/Project/csci6406_project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Users/deeppatel/Desktop/Visualization/Project/csci6406_project/src/components/PieChart.js\";\nimport React, { Component, useState, useEffect } from \"react\";\nimport \"./CanadaMap.css\";\nimport Province from \"./Province\";\nimport { withRouter } from \"react-router-dom\";\nimport DonutJSON from \"./PieChartData.json\";\nimport PieClass from \"./PieClass\";\nimport * as d3 from \"d3\";\n\nvar PieChart = /*#__PURE__*/function (_Component) {\n  _inherits(PieChart, _Component);\n\n  var _super = _createSuper(PieChart);\n\n  function PieChart(props) {\n    var _this;\n\n    _classCallCheck(this, PieChart);\n\n    _this = _super.call(this, props);\n    _this.chRef = React.createRef();\n    return _this;\n  }\n\n  _createClass(PieChart, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.drawChart();\n    }\n  }, {\n    key: \"drawChart\",\n    value: function drawChart() {\n      // Create dummy data\n      // const data = DonutJSON;\n      // let usableData = {}\n      // for(let i=0; i<=15; i++){\n      //     if(data[i]){\n      //         if(data[i].location === this.props.location.state){\n      //         usableData = data[i];\n      //         }\n      //     }\n      // }\n      // set the dimensions and margins of the graph\n      var width = 450,\n          height = 450,\n          margin = 40; // The radius of the pieplot is half the width or half the height (smallest one). I subtract a bit of margin.\n\n      var radius = Math.min(width, height) / 2 - margin; // append the svg object to the div called 'my_dataviz'\n\n      var svg = d3.select(this.chRef.current).append(\"svg\").attr(\"width\", width).attr(\"height\", height).append(\"g\").attr(\"transform\", \"translate(\" + width / 2 + \",\" + height / 2 + \")\"); // Create dummy data\n\n      var data = {\n        a: 9,\n        b: 20,\n        c: 30,\n        d: 8,\n        e: 12\n      }; // set the color scale\n\n      var color = d3.scaleOrdinal(d3.schemeCategory10); // Compute the position of each group on the pie:\n\n      var pie = d3.pie().value(function (d) {\n        return d.value;\n      });\n      var data_ready = pie(data); // Now I know that group A goes from 0 degrees to x degrees and so on.\n      // shape helper to build arcs:\n\n      var arcGenerator = d3.arc().innerRadius(0).outerRadius(radius); // Build the pie chart: Basically, each part of the pie is a path that we build using the arc function.\n\n      svg.selectAll('mySlices').data(data_ready).enter().append('path').attr('d', arcGenerator).attr('fill', function (d) {\n        return color(d.data.key);\n      }).attr(\"stroke\", \"black\").style(\"stroke-width\", \"2px\").style(\"opacity\", 0.7); // Now add the annotation. Use the centroid method to get the best coordinates\n\n      svg.selectAll('mySlices').data(data_ready).enter().append('text').text(function (d) {\n        return \"grp \" + d.data.key;\n      }).attr(\"transform\", function (d) {\n        return \"translate(\" + arcGenerator.centroid(d) + \")\";\n      }).style(\"text-anchor\", \"middle\").style(\"font-size\", 17);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 9\n        }\n      }, this.props.location.state), /*#__PURE__*/React.createElement(\"div\", {\n        ref: this.chRef,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return PieChart;\n}(Component);\n\nexport default withRouter(PieChart);","map":{"version":3,"sources":["/Users/deeppatel/Desktop/Visualization/Project/csci6406_project/src/components/PieChart.js"],"names":["React","Component","useState","useEffect","Province","withRouter","DonutJSON","PieClass","d3","PieChart","props","chRef","createRef","drawChart","width","height","margin","radius","Math","min","svg","select","current","append","attr","data","a","b","c","d","e","color","scaleOrdinal","schemeCategory10","pie","value","data_ready","arcGenerator","arc","innerRadius","outerRadius","selectAll","enter","key","style","text","centroid","location","state"],"mappings":"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","sourcesContent":["import React, { Component, useState, useEffect } from \"react\";\nimport \"./CanadaMap.css\";\nimport Province from \"./Province\";\nimport { withRouter } from \"react-router-dom\";\nimport DonutJSON from \"./PieChartData.json\";\nimport PieClass from \"./PieClass\";\nimport * as d3 from \"d3\";\n\nclass PieChart extends Component {\n    \n  constructor(props) {\n    super(props);\n    this.chRef = React.createRef();\n  }\n\ncomponentDidMount(){\n    this.drawChart()\n}\n\ndrawChart(){\n    // Create dummy data\n    // const data = DonutJSON;\n    // let usableData = {}\n    // for(let i=0; i<=15; i++){\n    //     if(data[i]){\n    //         if(data[i].location === this.props.location.state){\n    //         usableData = data[i];\n    //         }\n    //     }\n    // }\n\n    // set the dimensions and margins of the graph\n    var width = 450, height = 450, margin = 40\n\n    // The radius of the pieplot is half the width or half the height (smallest one). I subtract a bit of margin.\n    var radius = Math.min(width, height) / 2 - margin\n\n    // append the svg object to the div called 'my_dataviz'\n    var svg = d3.select(this.chRef.current)\n    .append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height)\n    .append(\"g\")\n    .attr(\"transform\", \"translate(\" + width / 2 + \",\" + height / 2 + \")\");\n\n    // Create dummy data\n    var data = {a: 9, b: 20, c:30, d:8, e:12}\n\n    // set the color scale\n    var color = d3.scaleOrdinal(d3.schemeCategory10)\n\n    // Compute the position of each group on the pie:\n    var pie = d3.pie()\n    .value(function(d) {return d.value; })\n    var data_ready = pie(data)\n    // Now I know that group A goes from 0 degrees to x degrees and so on.\n\n    // shape helper to build arcs:\n    var arcGenerator = d3.arc()\n    .innerRadius(0)\n    .outerRadius(radius)\n\n    // Build the pie chart: Basically, each part of the pie is a path that we build using the arc function.\n    svg\n    .selectAll('mySlices')\n    .data(data_ready)\n    .enter()\n    .append('path')\n    .attr('d', arcGenerator)\n    .attr('fill', function(d){ return(color(d.data.key)) })\n    .attr(\"stroke\", \"black\")\n    .style(\"stroke-width\", \"2px\")\n    .style(\"opacity\", 0.7)\n\n    // Now add the annotation. Use the centroid method to get the best coordinates\n    svg\n    .selectAll('mySlices')\n    .data(data_ready)\n    .enter()\n    .append('text')\n    .text(function(d){ return \"grp \" + d.data.key})\n    .attr(\"transform\", function(d) { return \"translate(\" + arcGenerator.centroid(d) + \")\";  })\n    .style(\"text-anchor\", \"middle\")\n    .style(\"font-size\", 17)\n\n    }\n\nrender() {\n    return (\n      <>\n        <h1>{this.props.location.state}</h1>\n        <div ref={this.chRef}></div>\n        {/* <script src=\"https://d3js.org/d3.v6.js\"></script>\n        <script src=\"/Users/deeppatel/Desktop/Visualization/Project/csci6406_project/node_modules/d3/dist/d3.js\"></script>\n        <script src=\"/Users/deeppatel/Desktop/Visualization/Project/csci6406_project/node_modules/d3moji/d3moji.js\"></script> */}\n      </>\n    );\n  }\n}\n\nexport default withRouter(PieChart);\n"]},"metadata":{},"sourceType":"module"}