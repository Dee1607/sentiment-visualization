{"ast":null,"code":"import _classCallCheck from \"/Users/deeppatel/Desktop/Visualization/Project/csci6406_project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/deeppatel/Desktop/Visualization/Project/csci6406_project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/deeppatel/Desktop/Visualization/Project/csci6406_project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/deeppatel/Desktop/Visualization/Project/csci6406_project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Users/deeppatel/Desktop/Visualization/Project/csci6406_project/src/components/WordCloudChart.js\";\nimport React, { Component, useState, useEffect } from \"react\";\nimport \"./CanadaMap.css\";\nimport Province from \"./Province\";\nimport { withRouter } from \"react-router-dom\";\nimport DonutJSON from \"./PieChartData.json\";\nimport PieClass from \"./PieClass\";\nimport * as d3 from \"d3\";\nimport { render } from 'react-dom';\nimport WordCloud from 'react-d3-cloud';\nvar data = [{\n  text: 'Hey',\n  value: 1000\n}, {\n  text: 'lol',\n  value: 200\n}, {\n  text: 'first impression',\n  value: 800\n}, {\n  text: 'very cool',\n  value: 1000000\n}, {\n  text: 'duck',\n  value: 10\n}];\nvar colors = ['red', 'blue', 'green'];\n\nvar WordCloudChart = /*#__PURE__*/function (_Component) {\n  _inherits(WordCloudChart, _Component);\n\n  var _super = _createSuper(WordCloudChart);\n\n  function WordCloudChart(props) {\n    var _this;\n\n    _classCallCheck(this, WordCloudChart);\n\n    _this = _super.call(this, props);\n    _this.chRef = React.createRef();\n    return _this;\n  }\n\n  _createClass(WordCloudChart, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.drawChart();\n    }\n  }, {\n    key: \"drawChart\",\n    value: function drawChart() {\n      render( /*#__PURE__*/React.createElement(WordCloud, {\n        data: data,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 16\n        }\n      }), document.getElementById('root')); // var myWords = [\"Hello\", \"Everybody\", \"How\", \"Are\", \"You\", \"Today\", \"It\", \"Is\", \"A\", \"Lovely\", \"Day\", \"I\", \"Love\", \"Coding\", \"In\", \"My\", \"Van\", \"Mate\"]\n      // // set the dimensions and margins of the graph\n      // var margin = {top: 10, right: 10, bottom: 10, left: 10},\n      //     width = 450 - margin.left - margin.right,\n      //     height = 450 - margin.top - margin.bottom;\n      // // append the svg object to the body of the page\n      // var svg = d3.select(this.chRef.current).append(\"svg\")\n      //     .attr(\"width\", width + margin.left + margin.right)\n      //     .attr(\"height\", height + margin.top + margin.bottom)\n      // .append(\"g\")\n      //     .attr(\"transform\",\n      //         \"translate(\" + margin.left + \",\" + margin.top + \")\");\n      // // Constructs a new cloud layout instance. It run an algorithm to find the position of words that suits your requirements\n      // var layout = d3.layout.cloud()\n      // .size([width, height])\n      // .words(myWords.map(function(d) { return {text: d}; }))\n      // .padding(10)\n      // .fontSize(60)\n      // .on(\"end\", draw);\n      // layout.start();\n      // // This function takes the output of 'layout' above and draw the words\n      // // Better not to touch it. To change parameters, play with the 'layout' variable above\n      // function draw(words) {\n      // svg\n      //     .append(\"g\")\n      //     .attr(\"transform\", \"translate(\" + layout.size()[0] / 2 + \",\" + layout.size()[1] / 2 + \")\")\n      //     .selectAll(\"text\")\n      //         .data(words)\n      //     .enter().append(\"text\")\n      //         .style(\"font-size\", function(d) { return d.size + \"px\"; })\n      //         .attr(\"text-anchor\", \"middle\")\n      //         .attr(\"transform\", function(d) {\n      //         return \"translate(\" + [d.x, d.y] + \")rotate(\" + d.rotate + \")\";\n      //         })\n      //         .text(function(d) { return d.text; });\n      // }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }\n      }, this.props.location.state), /*#__PURE__*/React.createElement(\"div\", {\n        ref: this.chRef,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }\n      }));\n    }\n  }]);\n\n  return WordCloudChart;\n}(Component);\n\nexport default withRouter(WordCloudChart);","map":{"version":3,"sources":["/Users/deeppatel/Desktop/Visualization/Project/csci6406_project/src/components/WordCloudChart.js"],"names":["React","Component","useState","useEffect","Province","withRouter","DonutJSON","PieClass","d3","render","WordCloud","data","text","value","colors","WordCloudChart","props","chRef","createRef","drawChart","document","getElementById","location","state"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,SAArC,QAAsD,OAAtD;AACA,OAAO,iBAAP;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAO,KAAKC,EAAZ,MAAoB,IAApB;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,OAAOC,SAAP,MAAsB,gBAAtB;AAEA,IAAMC,IAAI,GAAG,CACT;AAAEC,EAAAA,IAAI,EAAE,KAAR;AAAeC,EAAAA,KAAK,EAAE;AAAtB,CADS,EAET;AAAED,EAAAA,IAAI,EAAE,KAAR;AAAeC,EAAAA,KAAK,EAAE;AAAtB,CAFS,EAGT;AAAED,EAAAA,IAAI,EAAE,kBAAR;AAA4BC,EAAAA,KAAK,EAAE;AAAnC,CAHS,EAIT;AAAED,EAAAA,IAAI,EAAE,WAAR;AAAqBC,EAAAA,KAAK,EAAE;AAA5B,CAJS,EAKT;AAAED,EAAAA,IAAI,EAAE,MAAR;AAAgBC,EAAAA,KAAK,EAAE;AAAvB,CALS,CAAb;AAOA,IAAMC,MAAM,GAAG,CAAE,KAAF,EAAU,MAAV,EAAkB,OAAlB,CAAf;;IAEMC,c;;;;;AAEJ,0BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAajB,KAAK,CAACkB,SAAN,EAAb;AAFiB;AAGlB;;;;WAEC,6BAAmB;AACf,WAAKC,SAAL;AACH;;;WAED,qBAAW;AAEPV,MAAAA,MAAM,eAAC,oBAAC,SAAD;AAAW,QAAA,IAAI,EAAEE,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAD,EAA4BS,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAA5B,CAAN,CAFO,CAIP;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEH;;;WACD,kBAAS;AACL,0BACE,uDACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK,KAAKL,KAAL,CAAWM,QAAX,CAAoBC,KAAzB,CADF,eAEE;AAAK,QAAA,GAAG,EAAE,KAAKN,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF;AAMH;;;;EAhEwBhB,S;;AAkE7B,eAAeI,UAAU,CAACU,cAAD,CAAzB","sourcesContent":["import React, { Component, useState, useEffect } from \"react\";\nimport \"./CanadaMap.css\";\nimport Province from \"./Province\";\nimport { withRouter } from \"react-router-dom\";\nimport DonutJSON from \"./PieChartData.json\";\nimport PieClass from \"./PieClass\";\nimport * as d3 from \"d3\";\nimport { render } from 'react-dom';\nimport WordCloud from 'react-d3-cloud';\n\nconst data = [\n    { text: 'Hey', value: 1000 },\n    { text: 'lol', value: 200 },\n    { text: 'first impression', value: 800 },\n    { text: 'very cool', value: 1000000 },\n    { text: 'duck', value: 10 },\n  ];\nconst colors = [ 'red' , 'blue', 'green']\n\nclass WordCloudChart extends Component {\n    \n  constructor(props) {\n    super(props);\n    this.chRef = React.createRef();\n  }\n\n    componentDidMount(){\n        this.drawChart()\n    }\n\n    drawChart(){\n\n        render(<WordCloud data={data} />, document.getElementById('root'));\n\n        // var myWords = [\"Hello\", \"Everybody\", \"How\", \"Are\", \"You\", \"Today\", \"It\", \"Is\", \"A\", \"Lovely\", \"Day\", \"I\", \"Love\", \"Coding\", \"In\", \"My\", \"Van\", \"Mate\"]\n\n        // // set the dimensions and margins of the graph\n        // var margin = {top: 10, right: 10, bottom: 10, left: 10},\n        //     width = 450 - margin.left - margin.right,\n        //     height = 450 - margin.top - margin.bottom;\n\n        // // append the svg object to the body of the page\n        // var svg = d3.select(this.chRef.current).append(\"svg\")\n        //     .attr(\"width\", width + margin.left + margin.right)\n        //     .attr(\"height\", height + margin.top + margin.bottom)\n        // .append(\"g\")\n        //     .attr(\"transform\",\n        //         \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n        // // Constructs a new cloud layout instance. It run an algorithm to find the position of words that suits your requirements\n        // var layout = d3.layout.cloud()\n        // .size([width, height])\n        // .words(myWords.map(function(d) { return {text: d}; }))\n        // .padding(10)\n        // .fontSize(60)\n        // .on(\"end\", draw);\n        // layout.start();\n\n        // // This function takes the output of 'layout' above and draw the words\n        // // Better not to touch it. To change parameters, play with the 'layout' variable above\n        // function draw(words) {\n        // svg\n        //     .append(\"g\")\n        //     .attr(\"transform\", \"translate(\" + layout.size()[0] / 2 + \",\" + layout.size()[1] / 2 + \")\")\n        //     .selectAll(\"text\")\n        //         .data(words)\n        //     .enter().append(\"text\")\n        //         .style(\"font-size\", function(d) { return d.size + \"px\"; })\n        //         .attr(\"text-anchor\", \"middle\")\n        //         .attr(\"transform\", function(d) {\n        //         return \"translate(\" + [d.x, d.y] + \")rotate(\" + d.rotate + \")\";\n        //         })\n        //         .text(function(d) { return d.text; });\n        // }\n\n    }\n    render() {\n        return (\n          <>\n            <h1>{this.props.location.state}</h1>\n            <div ref={this.chRef}></div>\n        </>\n        );\n    }\n}\nexport default withRouter(WordCloudChart);"]},"metadata":{},"sourceType":"module"}