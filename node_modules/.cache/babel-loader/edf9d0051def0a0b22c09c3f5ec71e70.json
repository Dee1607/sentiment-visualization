{"ast":null,"code":"import _slicedToArray from \"/Users/deeppatel/Desktop/Visualization/Project/csci6406_project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/deeppatel/Desktop/Visualization/Project/csci6406_project/src/App.js\";\nimport React from \"react\";\nimport CanadaMap from \"./components/CanadaMap\";\nimport \"./styles.css\";\nimport DonutChart from './components/donutChart';\nimport CanadaJSON from \"./components/CanadaMap.json\";\nimport DonutJSON from \"./components/donutData.json\";\nimport { useEffect, useState } from \"react/cjs/react.production.min\";\nexport default function App() {\n  var _this = this;\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      visible = _React$useState2[0],\n      setVisible = _React$useState2[1];\n\n  var _React$useState3 = React.useState(\"Show\"),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      show = _React$useState4[0],\n      setShow = _React$useState4[1];\n\n  var _React$useState5 = React.useState([]),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      data = _React$useState6[0],\n      setData = _React$useState6[1];\n\n  var _React$useState7 = React.useState([]),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      donutData = _React$useState8[0],\n      setDonutData = _React$useState8[1]; // React.useEffect(() => {\n  //   const url = \"https://api.opencovid.ca/timeseries\";\n  //   fetch(url)\n  //     .then((response) => response.json())\n  //     .then((json) => setData(json['active']),\n  //     )\n  //     .catch((error) => console.log(error));\n  // }, []);\n  // console.log(donutData)\n\n\n  function handleClick(e) {\n    if (show == \"Show\") {\n      setVisible(true);\n      setShow(\"Hide\");\n    } else {\n      setVisible(false);\n      setShow(\"Show\");\n    }\n\n    console.log(visible);\n  }\n\n  var Chart = function Chart() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }\n    }, \"Chart\"), /*#__PURE__*/React.createElement(DonutChart, {\n      data: DonutJSON,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }\n    }));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, show, \" Donut\"), visible ? /*#__PURE__*/React.createElement(Chart, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 19\n    }\n  }) : null, /*#__PURE__*/React.createElement(CanadaMap, {\n    mapJson: CanadaJSON,\n    width: \"760\",\n    height: \"620\",\n    viewBox: \"0 0 760 620\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/deeppatel/Desktop/Visualization/Project/csci6406_project/src/App.js"],"names":["React","CanadaMap","DonutChart","CanadaJSON","DonutJSON","useEffect","useState","App","visible","setVisible","show","setShow","data","setData","donutData","setDonutData","handleClick","e","console","log","Chart"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAO,cAAP;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,UAAP,MAAuB,6BAAvB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,gCAApC;AAEA,eAAe,SAASC,GAAT,GAAe;AAAA;;AAC5B,wBAA8BP,KAAK,CAACM,QAAN,CAAe,KAAf,CAA9B;AAAA;AAAA,MAAOE,OAAP;AAAA,MAAgBC,UAAhB;;AACA,yBAAwBT,KAAK,CAACM,QAAN,CAAe,MAAf,CAAxB;AAAA;AAAA,MAAOI,IAAP;AAAA,MAAaC,OAAb;;AACA,yBAAwBX,KAAK,CAACM,QAAN,CAAe,EAAf,CAAxB;AAAA;AAAA,MAAOM,IAAP;AAAA,MAAaC,OAAb;;AACA,yBAAkCb,KAAK,CAACM,QAAN,CAAe,EAAf,CAAlC;AAAA;AAAA,MAAOQ,SAAP;AAAA,MAAkBC,YAAlB,uBAJ4B,CAM5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,WAASC,WAAT,CAAqBC,CAArB,EAAwB;AACtB,QAAGP,IAAI,IAAI,MAAX,EAAkB;AAChBD,MAAAA,UAAU,CAAC,IAAD,CAAV;AACAE,MAAAA,OAAO,CAAC,MAAD,CAAP;AACD,KAHD,MAGK;AACHF,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAE,MAAAA,OAAO,CAAC,MAAD,CAAP;AACD;;AACDO,IAAAA,OAAO,CAACC,GAAR,CAAYX,OAAZ;AACD;;AAED,MAAMY,KAAK,GAAG,SAARA,KAAQ,GAAK;AACjB,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAEE,oBAAC,UAAD;AAAY,MAAA,IAAI,EAAEhB,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAMD,GAPD;;AAQA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,OAAO,EAAEY,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+BN,IAA/B,WADF,EAEIF,OAAO,gBAAG,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GAAe,IAF1B,eAIE,oBAAC,SAAD;AACE,IAAA,OAAO,EAAEL,UADX;AAEE,IAAA,KAAK,EAAC,KAFR;AAGE,IAAA,MAAM,EAAC,KAHT;AAIE,IAAA,OAAO,EAAC,aAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADF;AAaD","sourcesContent":["import React from \"react\";\nimport CanadaMap from \"./components/CanadaMap\";\nimport \"./styles.css\";\nimport DonutChart from './components/donutChart';\nimport CanadaJSON from \"./components/CanadaMap.json\";\nimport DonutJSON from \"./components/donutData.json\";\nimport { useEffect, useState } from \"react/cjs/react.production.min\";\n\nexport default function App() {\n  const [visible, setVisible] = React.useState(false)\n  const [show, setShow] = React.useState(\"Show\")\n  const [data, setData] = React.useState([]);\n  const [donutData, setDonutData] = React.useState([]);\n\n  // React.useEffect(() => {\n  //   const url = \"https://api.opencovid.ca/timeseries\";\n  //   fetch(url)\n  //     .then((response) => response.json())\n  //     .then((json) => setData(json['active']),\n  //     )\n  //     .catch((error) => console.log(error));\n  // }, []);\n  // console.log(donutData)\n\n  function handleClick(e) {\n    if(show == \"Show\"){\n      setVisible(true)\n      setShow(\"Hide\")\n    }else{\n      setVisible(false)\n      setShow(\"Show\")\n    }\n    console.log(visible)\n  }\n\n  const Chart = () =>{\n    return(\n      <div>\n        <p>Chart</p>\n        <DonutChart data={DonutJSON} />\n      </div>\n    )\n  }\n  return (\n    <div className=\"App\">\n      <button onClick={handleClick}>{show} Donut</button>\n      { visible ? <Chart /> : null }\n\n      <CanadaMap\n        mapJson={CanadaJSON}\n        width=\"760\"\n        height=\"620\"\n        viewBox=\"0 0 760 620\"\n      />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}