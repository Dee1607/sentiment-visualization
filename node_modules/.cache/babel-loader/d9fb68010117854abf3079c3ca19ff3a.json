{"ast":null,"code":"import _classCallCheck from \"/Users/deeppatel/Desktop/Visualization/Project/canada-map-d3-forked/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/deeppatel/Desktop/Visualization/Project/canada-map-d3-forked/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Users/deeppatel/Desktop/Visualization/Project/canada-map-d3-forked/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/deeppatel/Desktop/Visualization/Project/canada-map-d3-forked/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/deeppatel/Desktop/Visualization/Project/canada-map-d3-forked/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Users/deeppatel/Desktop/Visualization/Project/canada-map-d3-forked/src/components/CanadaMap.js\";\n// import React, { useState, useEffect } from \"react\";\n// import { geoEqualEarth, geoPath } from \"d3-geo\";\n// import { geoTimes } from \"d3-geo-projection\";\n// import { feature } from \"topojson-client\";\nimport React, { Component } from \"react\";\nimport \"./CanadaMap.css\";\nimport Province from \"./Province\";\n\nvar CanadaMap = /*#__PURE__*/function (_Component) {\n  _inherits(CanadaMap, _Component);\n\n  var _super = _createSuper(CanadaMap);\n\n  function CanadaMap(props) {\n    var _this;\n\n    _classCallCheck(this, CanadaMap);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      viewBox: _this.props.viewBox,\n      selected: null // empty states\n\n    };\n    _this.onSelect = _this.onSelect.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(CanadaMap, [{\n    key: \"onSelect\",\n    value: function onSelect(id) {\n      this.setState({\n        selected: id\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          mapJson = _this$props.mapJson,\n          width = _this$props.width,\n          height = _this$props.height;\n      var _this$state = this.state,\n          viewBox = _this$state.viewBox,\n          selected = _this$state.selected;\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 9\n        }\n      }, this.state.selected ? this.state.selected : \"Canada\"), /*#__PURE__*/React.createElement(\"svg\", {\n        width: width,\n        height: height,\n        viewBox: viewBox,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 9\n        }\n      }, mapJson.map(function (province) {\n        return /*#__PURE__*/React.createElement(Province, {\n          id: province.id,\n          d: province.d,\n          onSelect: _this2.onSelect,\n          selected: selected,\n          key: \"province-\".concat(province.id),\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }\n        });\n      })));\n    }\n  }]);\n\n  return CanadaMap;\n}(Component);\n\nexport default CanadaMap;","map":{"version":3,"sources":["/Users/deeppatel/Desktop/Visualization/Project/canada-map-d3-forked/src/components/CanadaMap.js"],"names":["React","Component","Province","CanadaMap","props","state","viewBox","selected","onSelect","bind","id","setState","mapJson","width","height","map","province","d"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AAEA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,iBAAP;AAEA,OAAOC,QAAP,MAAqB,YAArB;;IAEMC,S;;;;;AACJ,qBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE,MAAKF,KAAL,CAAWE,OADT;AAEXC,MAAAA,QAAQ,EAAE,IAFC,CAGX;;AAHW,KAAb;AAKA,UAAKC,QAAL,GAAgB,MAAKA,QAAL,CAAcC,IAAd,+BAAhB;AAPiB;AAQlB;;;;WAED,kBAASC,EAAT,EAAa;AACX,WAAKC,QAAL,CAAc;AAAEJ,QAAAA,QAAQ,EAAEG;AAAZ,OAAd;AACD;;;WAED,kBAAS;AAAA;;AACP,wBAAmC,KAAKN,KAAxC;AAAA,UAAQQ,OAAR,eAAQA,OAAR;AAAA,UAAiBC,KAAjB,eAAiBA,KAAjB;AAAA,UAAwBC,MAAxB,eAAwBA,MAAxB;AACA,wBAA8B,KAAKT,KAAnC;AAAA,UAAQC,OAAR,eAAQA,OAAR;AAAA,UAAiBC,QAAjB,eAAiBA,QAAjB;AAEA,0BACE,uDACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK,KAAKF,KAAL,CAAWE,QAAX,GAAsB,KAAKF,KAAL,CAAWE,QAAjC,GAA4C,QAAjD,CADF,eAEE;AAAK,QAAA,KAAK,EAAEM,KAAZ;AAAmB,QAAA,MAAM,EAAEC,MAA3B;AAAmC,QAAA,OAAO,EAAER,OAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGM,OAAO,CAACG,GAAR,CAAY,UAACC,QAAD;AAAA,4BACX,oBAAC,QAAD;AACE,UAAA,EAAE,EAAEA,QAAQ,CAACN,EADf;AAEE,UAAA,CAAC,EAAEM,QAAQ,CAACC,CAFd;AAGE,UAAA,QAAQ,EAAE,MAAI,CAACT,QAHjB;AAIE,UAAA,QAAQ,EAAED,QAJZ;AAKE,UAAA,GAAG,qBAAcS,QAAQ,CAACN,EAAvB,CALL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADW;AAAA,OAAZ,CADH,CAFF,CADF;AAgBD;;;;EAnCqBT,S;;AAsCxB,eAAeE,SAAf","sourcesContent":["// import React, { useState, useEffect } from \"react\";\r\n// import { geoEqualEarth, geoPath } from \"d3-geo\";\r\n// import { geoTimes } from \"d3-geo-projection\";\r\n// import { feature } from \"topojson-client\";\r\n\r\nimport React, { Component } from \"react\";\r\nimport \"./CanadaMap.css\";\r\n\r\nimport Province from \"./Province\";\r\n\r\nclass CanadaMap extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      viewBox: this.props.viewBox,\r\n      selected: null\r\n      // empty states\r\n    };\r\n    this.onSelect = this.onSelect.bind(this);\r\n  }\r\n\r\n  onSelect(id) {\r\n    this.setState({ selected: id });\r\n  }\r\n\r\n  render() {\r\n    const { mapJson, width, height } = this.props;\r\n    const { viewBox, selected } = this.state;\r\n\r\n    return (\r\n      <>\r\n        <h1>{this.state.selected ? this.state.selected : \"Canada\"}</h1>\r\n        <svg width={width} height={height} viewBox={viewBox}>\r\n          {mapJson.map((province) => (\r\n            <Province\r\n              id={province.id}\r\n              d={province.d}\r\n              onSelect={this.onSelect}\r\n              selected={selected}\r\n              key={`province-${province.id}`}\r\n            />\r\n          ))}\r\n        </svg>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CanadaMap;\r\n"]},"metadata":{},"sourceType":"module"}