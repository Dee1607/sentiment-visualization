{"ast":null,"code":"import _classCallCheck from \"/Users/deeppatel/Desktop/Visualization/Project/csci6406_project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/deeppatel/Desktop/Visualization/Project/csci6406_project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Users/deeppatel/Desktop/Visualization/Project/csci6406_project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/deeppatel/Desktop/Visualization/Project/csci6406_project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/deeppatel/Desktop/Visualization/Project/csci6406_project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Users/deeppatel/Desktop/Visualization/Project/csci6406_project/src/components/CanadaMap.js\";\nimport React, { Component } from \"react\";\nimport \"./CanadaMap.css\";\nimport { DropdownButton, Dropdown, ButtonGroup } from \"react-bootstrap\";\nimport Form from 'react-bootstrap/Form';\nimport Province from \"./Province\";\nimport \"../../src/styles.css\";\nimport * as d3 from \"d3\";\nimport { color } from \"d3\";\n\nvar CanadaMap = /*#__PURE__*/function (_Component) {\n  _inherits(CanadaMap, _Component);\n\n  var _super = _createSuper(CanadaMap);\n\n  function CanadaMap(props) {\n    var _this;\n\n    _classCallCheck(this, CanadaMap);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      viewBox: _this.props.viewBox,\n      selected: null\n    };\n    _this.onSelect = _this.onSelect.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(CanadaMap, [{\n    key: \"onSelect\",\n    value: function onSelect(id) {\n      this.setState({\n        selected: id\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          mapJson = _this$props.mapJson,\n          width = _this$props.width,\n          height = _this$props.height;\n      var _this$state = this.state,\n          viewBox = _this$state.viewBox,\n          selected = _this$state.selected;\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-4\",\n        style: {\n          textAlign: \"left\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"h2\", {\n        className: \"h2\",\n        onMouseOver: d3.select('this').attr(\"fill\", \"\").classed(\"active\", true),\n        style: {\n          fontSize: 50,\n          fontStyle: \"bold\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }\n      }, this.state.selected ? this.state.selected : \"Canada\"), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"h2\", {\n        style: {\n          fontSize: 50\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }\n      }, \"Data Visualization \", /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 32\n        }\n      }, \"on the \"), \" Sentimental Analysis of Tweeter Data\"), /*#__PURE__*/React.createElement(Form.Group, {\n        controlId: \"custom-select\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Form.Control, {\n        as: \"select\",\n        className: \"rounded-0 shadow\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 16\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        className: \"d-none\",\n        value: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }\n      }, \"Select Data\"), [\"1\", \"2\", \"3\", \"4\", \"5\"].map(function (option) {\n        return /*#__PURE__*/React.createElement(\"option\", {\n          key: option,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 26\n          }\n        }, \"Option \", option);\n      })))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-8\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"svg\", {\n        width: width,\n        height: height,\n        viewBox: viewBox,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }\n      }, mapJson.map(function (province) {\n        return /*#__PURE__*/React.createElement(Province, {\n          id: province.id,\n          d: province.d,\n          onSelect: _this2.onSelect,\n          selected: selected,\n          key: \"province-\".concat(province.id),\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }\n        });\n      })))));\n    }\n  }]);\n\n  return CanadaMap;\n}(Component);\n\nexport default CanadaMap;","map":{"version":3,"sources":["/Users/deeppatel/Desktop/Visualization/Project/csci6406_project/src/components/CanadaMap.js"],"names":["React","Component","DropdownButton","Dropdown","ButtonGroup","Form","Province","d3","color","CanadaMap","props","state","viewBox","selected","onSelect","bind","id","setState","mapJson","width","height","textAlign","select","attr","classed","fontSize","fontStyle","map","option","province","d"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./CanadaMap.css\";\r\nimport { DropdownButton, Dropdown, ButtonGroup } from \"react-bootstrap\";\r\nimport Form from 'react-bootstrap/Form'\r\nimport Province from \"./Province\";\r\nimport \"../../src/styles.css\"\r\nimport * as d3 from \"d3\";\r\nimport { color } from \"d3\";\r\n\r\nclass CanadaMap extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      viewBox: this.props.viewBox,\r\n      selected: null\r\n    };\r\n    this.onSelect = this.onSelect.bind(this);\r\n  }\r\n\r\n  onSelect(id) {\r\n    this.setState({ selected: id });\r\n  }\r\n\r\n  render() {\r\n    const { mapJson, width, height } = this.props;\r\n    const { viewBox, selected } = this.state;\r\n\r\n    return (\r\n      <>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-4\" style={{textAlign: \"left\"}}>\r\n          <h2></h2>\r\n          <h2 className=\"h2\" \r\n            onMouseOver=\r\n            { \r\n              d3.select('this')\r\n              .attr(\"fill\",\"\")\r\n              .classed(\"active\", true)\r\n            } \r\n            style={{fontSize:50, fontStyle:\"bold\"}}\r\n          >{this.state.selected ? this.state.selected : \"Canada\"}</h2>\r\n          <br /><br />\r\n          <h2 style={{fontSize:50}}>\r\n            Data Visualization <h4>on the </h4> Sentimental Analysis of Tweeter Data\r\n          </h2>\r\n          <Form.Group controlId=\"custom-select\">\r\n               {/* <Form.Label>Sentiment Selection</Form.Label> */}\r\n               <Form.Control as=\"select\" className=\"rounded-0 shadow\">\r\n                    <option className=\"d-none\" value=\"\">\r\n                         Select Data\r\n                    </option>\r\n                    {[\"1\", \"2\", \"3\", \"4\", \"5\"].map(option => (\r\n                         <option key={option}>Option {option}</option>\r\n                    ))}\r\n               </Form.Control>\r\n          </Form.Group>\r\n        </div>\r\n        <div className=\"col-md-8\"> \r\n          <svg width={width} height={height} viewBox={viewBox}>\r\n            {mapJson.map((province) => (\r\n              <Province\r\n                id={province.id}\r\n                d={province.d}\r\n                onSelect={this.onSelect}\r\n                selected={selected}\r\n                key={`province-${province.id}`}\r\n              />\r\n            ))}\r\n          </svg>\r\n        </div>\r\n      </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CanadaMap;\r\n"]},"metadata":{},"sourceType":"module"}