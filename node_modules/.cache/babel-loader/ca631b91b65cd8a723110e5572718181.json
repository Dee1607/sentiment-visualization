{"ast":null,"code":"import { optional } from \"../accessors.js\";\nimport constant, { constantZero } from \"../constant.js\";\nimport lcg from \"../lcg.js\";\nimport { packSiblingsRandom } from \"./siblings.js\";\n\nfunction defaultRadius(d) {\n  return Math.sqrt(d.value);\n}\n\nexport default function () {\n  var radius = null,\n      dx = 1,\n      dy = 1,\n      padding = constantZero;\n\n  function pack(root) {\n    var random = lcg();\n    root.x = dx / 2, root.y = dy / 2;\n\n    if (radius) {\n      root.eachBefore(radiusLeaf(radius)).eachAfter(packChildrenRandom(padding, 0.5, random)).eachBefore(translateChild(1));\n    } else {\n      root.eachBefore(radiusLeaf(defaultRadius)).eachAfter(packChildrenRandom(constantZero, 1, random)).eachAfter(packChildrenRandom(padding, root.r / Math.min(dx, dy), random)).eachBefore(translateChild(Math.min(dx, dy) / (2 * root.r)));\n    }\n\n    return root;\n  }\n\n  pack.radius = function (x) {\n    return arguments.length ? (radius = optional(x), pack) : radius;\n  };\n\n  pack.size = function (x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], pack) : [dx, dy];\n  };\n\n  pack.padding = function (x) {\n    return arguments.length ? (padding = typeof x === \"function\" ? x : constant(+x), pack) : padding;\n  };\n\n  return pack;\n}\n\nfunction radiusLeaf(radius) {\n  return function (node) {\n    if (!node.children) {\n      node.r = Math.max(0, +radius(node) || 0);\n    }\n  };\n}\n\nfunction packChildrenRandom(padding, k, random) {\n  return function (node) {\n    if (children = node.children) {\n      var children,\n          i,\n          n = children.length,\n          r = padding(node) * k || 0,\n          e;\n      if (r) for (i = 0; i < n; ++i) {\n        children[i].r += r;\n      }\n      e = packSiblingsRandom(children, random);\n      if (r) for (i = 0; i < n; ++i) {\n        children[i].r -= r;\n      }\n      node.r = e + r;\n    }\n  };\n}\n\nfunction translateChild(k) {\n  return function (node) {\n    var parent = node.parent;\n    node.r *= k;\n\n    if (parent) {\n      node.x = parent.x + k * node.x;\n      node.y = parent.y + k * node.y;\n    }\n  };\n}","map":{"version":3,"sources":["/Users/deeppatel/Desktop/Visualization/Project/csci6406_project/node_modules/d3-hierarchy/src/pack/index.js"],"names":["optional","constant","constantZero","lcg","packSiblingsRandom","defaultRadius","d","Math","sqrt","value","radius","dx","dy","padding","pack","root","random","x","y","eachBefore","radiusLeaf","eachAfter","packChildrenRandom","translateChild","r","min","arguments","length","size","node","children","max","k","i","n","e","parent"],"mappings":"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","sourcesContent":["import {optional} from \"../accessors.js\";\nimport constant, {constantZero} from \"../constant.js\";\nimport lcg from \"../lcg.js\";\nimport {packSiblingsRandom} from \"./siblings.js\";\n\nfunction defaultRadius(d) {\n  return Math.sqrt(d.value);\n}\n\nexport default function() {\n  var radius = null,\n      dx = 1,\n      dy = 1,\n      padding = constantZero;\n\n  function pack(root) {\n    const random = lcg();\n    root.x = dx / 2, root.y = dy / 2;\n    if (radius) {\n      root.eachBefore(radiusLeaf(radius))\n          .eachAfter(packChildrenRandom(padding, 0.5, random))\n          .eachBefore(translateChild(1));\n    } else {\n      root.eachBefore(radiusLeaf(defaultRadius))\n          .eachAfter(packChildrenRandom(constantZero, 1, random))\n          .eachAfter(packChildrenRandom(padding, root.r / Math.min(dx, dy), random))\n          .eachBefore(translateChild(Math.min(dx, dy) / (2 * root.r)));\n    }\n    return root;\n  }\n\n  pack.radius = function(x) {\n    return arguments.length ? (radius = optional(x), pack) : radius;\n  };\n\n  pack.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], pack) : [dx, dy];\n  };\n\n  pack.padding = function(x) {\n    return arguments.length ? (padding = typeof x === \"function\" ? x : constant(+x), pack) : padding;\n  };\n\n  return pack;\n}\n\nfunction radiusLeaf(radius) {\n  return function(node) {\n    if (!node.children) {\n      node.r = Math.max(0, +radius(node) || 0);\n    }\n  };\n}\n\nfunction packChildrenRandom(padding, k, random) {\n  return function(node) {\n    if (children = node.children) {\n      var children,\n          i,\n          n = children.length,\n          r = padding(node) * k || 0,\n          e;\n\n      if (r) for (i = 0; i < n; ++i) children[i].r += r;\n      e = packSiblingsRandom(children, random);\n      if (r) for (i = 0; i < n; ++i) children[i].r -= r;\n      node.r = e + r;\n    }\n  };\n}\n\nfunction translateChild(k) {\n  return function(node) {\n    var parent = node.parent;\n    node.r *= k;\n    if (parent) {\n      node.x = parent.x + k * node.x;\n      node.y = parent.y + k * node.y;\n    }\n  };\n}\n"]},"metadata":{},"sourceType":"module"}