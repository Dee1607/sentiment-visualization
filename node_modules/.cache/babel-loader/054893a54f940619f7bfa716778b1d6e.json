{"ast":null,"code":"import _classCallCheck from \"/Users/deeppatel/Desktop/Visualization/Project/csci6406_project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/deeppatel/Desktop/Visualization/Project/csci6406_project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Users/deeppatel/Desktop/Visualization/Project/csci6406_project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/deeppatel/Desktop/Visualization/Project/csci6406_project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/deeppatel/Desktop/Visualization/Project/csci6406_project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Users/deeppatel/Desktop/Visualization/Project/csci6406_project/src/components/Province.js\";\nimport React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport \"./Province.css\"; // import * as d3 from 'd3';\n// const colors = [ '#8ce8ad', '#57e188', '#34c768', '#2db757', '#27acaa', '#42c9c2', '#60e6e1', '#93f0e6', '#87d3f2', '#4ebeeb', '#35a4e8', '#188ce5', '#542ea5', '#724bc3', '#9c82d4', '#c981b2', '#b14891', '#ff6d00', '#ff810a', '#ff9831', '#ffb46a', '#ff9a91', '#ff736a', '#f95d54', '#ff4136', '#c4c4cd' ];\n\nvar Province = /*#__PURE__*/function (_Component) {\n  _inherits(Province, _Component);\n\n  var _super = _createSuper(Province);\n\n  function Province(props) {\n    var _this;\n\n    _classCallCheck(this, Province);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      fill: \"#3A5311\"\n    };\n    console.log(\"In Province\", _this.props.option);\n    _this.handleClick = _this.handleClick.bind(_assertThisInitialized(_this));\n    _this.chRef = React.createRef();\n    return _this;\n  }\n\n  _createClass(Province, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      if (this.props.selected !== this.props.id) {\n        if (this.state.fill === \"navy\") this.setState({\n          fill: \"red\"\n        });\n      }\n    }\n  }, {\n    key: \"handleClick\",\n    value: function handleClick(id) {\n      console.log(id);\n      this.setState({\n        fill: \"green\"\n      });\n      this.props.onSelect(id);\n      this.props.history.push({\n        pathname: '/visualization/' + id,\n        state: id + '-' + this.props.option\n      }); // this.drawChart()\n    } //    // DrawChart\n    //    drawChart(){\n    //     const {data } = this.props;\n    //     const svgContainer = d3.select(this.chRef.current).node();\n    //     const width  = svgContainer.getBoundingClientRect().width;\n    //     const height = width;\n    //     const margin = 15;\n    //     let radius = Math.min(width, height) / 2  - margin;\n    //     // legend Position\n    //     let legendPosition = d3.arc().innerRadius(radius/1.75).outerRadius(radius);\n    //     // Create SVG\n    //     const svg  = d3.select(this.chRef.current)\n    //     .append('svg')\n    //     .attr(\"width\", '20%')\n    //     .attr(\"height\", '20%')\n    //         .attr('viewBox', '0 0 ' + width + ' ' + width )\n    //     //.attr('preserveAspectRatio','xMinYMin')\n    //     .append(\"g\")\n    //     .attr(\"transform\", \"translate(\" + Math.min(width,height) / 2 + \",\" + Math.min(width,height) / 2 + \")\");\n    //     let pie = d3.pie()\n    //         .value( d => d.value )\n    //     let data_ready = pie(data)\n    //     // Donut partition  \n    //     svg\n    //     .selectAll('whatever')\n    //     .data(data_ready)\n    //     .enter()\n    //     .append('path')\n    //     .attr('d', d3.arc()\n    //         .innerRadius(radius/ 1.75)  // This is the size of the donut hole\n    //         .outerRadius(radius)\n    //     )\n    //     .attr('fill',  (d) =>  colors[d.index] )\n    //     .attr(\"stroke\", \"#fff\")\n    //     .style(\"stroke-width\", \"2\")\n    //     .style(\"opacity\", \"0.8\")\n    //   // Legend group and legend name\n    //    svg\n    //     .selectAll('mySlices')\n    //     .data(data_ready)\n    //     .enter()\n    //     .append('g')\n    //     .attr(\"transform\", d => `translate(${legendPosition.centroid(d)})`)\n    //     .attr(\"class\", 'legend-g')\n    //     .style(\"user-select\", \"none\")\n    //     .append('text')\n    //     .text(d =>  d.data.name)\n    //     .style(\"text-anchor\", \"middle\")\n    //     .style(\"font-weight\", 700)\n    //     .style(\"fill\", '#222')\n    //     .style(\"font-size\", 14);\n    //    //Label for value\n    //     svg\n    //     .selectAll('.legend-g')\n    //     .append('text')\n    //     .text((d)=>{ return  d.data.value})\n    //     .style(\"fill\", '#444')\n    //     .style(\"font-size\", 12)\n    //     .style(\"text-anchor\", \"middle\")\n    //     .attr(\"y\", 16 );\n    // }\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var fill = this.state.fill;\n      var _this$props = this.props,\n          id = _this$props.id,\n          d = _this$props.d;\n      return /*#__PURE__*/React.createElement(\"svg\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"g\", {\n        key: \"g-\".concat(id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"path\", {\n        key: \"path-\".concat(id),\n        d: d,\n        className: \"province province__\".concat(id),\n        fill: fill,\n        stroke: \"#838383\",\n        strokeWidth: 1.5,\n        onClick: function onClick() {\n          return _this2.handleClick(id);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }\n      })));\n    }\n  }]);\n\n  return Province;\n}(Component);\n\nexport default withRouter(Province);","map":{"version":3,"sources":["/Users/deeppatel/Desktop/Visualization/Project/csci6406_project/src/components/Province.js"],"names":["React","Component","withRouter","Province","props","state","fill","console","log","option","handleClick","bind","chRef","createRef","selected","id","setState","onSelect","history","push","pathname","d"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAO,gBAAP,C,CAEA;AACA;;IAEMC,Q;;;;;AACJ,oBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE;AADK,KAAb;AAGAC,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA0B,MAAKJ,KAAL,CAAWK,MAArC;AACA,UAAKC,WAAL,GAAmB,MAAKA,WAAL,CAAiBC,IAAjB,+BAAnB;AACA,UAAKC,KAAL,GAAaZ,KAAK,CAACa,SAAN,EAAb;AAPiB;AAQlB;;;;WAED,8BAAqB;AACnB,UAAI,KAAKT,KAAL,CAAWU,QAAX,KAAwB,KAAKV,KAAL,CAAWW,EAAvC,EAA2C;AACzC,YAAI,KAAKV,KAAL,CAAWC,IAAX,KAAoB,MAAxB,EAAgC,KAAKU,QAAL,CAAc;AAAEV,UAAAA,IAAI,EAAE;AAAR,SAAd;AACjC;AACF;;;WAED,qBAAYS,EAAZ,EAAgB;AACdR,MAAAA,OAAO,CAACC,GAAR,CAAYO,EAAZ;AACA,WAAKC,QAAL,CAAc;AAAEV,QAAAA,IAAI,EAAE;AAAR,OAAd;AACA,WAAKF,KAAL,CAAWa,QAAX,CAAoBF,EAApB;AACA,WAAKX,KAAL,CAAWc,OAAX,CAAmBC,IAAnB,CAAwB;AAACC,QAAAA,QAAQ,EAAC,oBAAkBL,EAA5B;AAAgCV,QAAAA,KAAK,EAACU,EAAE,GAAC,GAAH,GAAO,KAAKX,KAAL,CAAWK;AAAxD,OAAxB,EAJc,CAKd;AACD,K,CAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;WAGE,kBAAS;AAAA;;AACP,UAAQH,IAAR,GAAiB,KAAKD,KAAtB,CAAQC,IAAR;AACA,wBAAkB,KAAKF,KAAvB;AAAA,UAAQW,EAAR,eAAQA,EAAR;AAAA,UAAYM,CAAZ,eAAYA,CAAZ;AAEA,0BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAG,QAAA,GAAG,cAAON,EAAP,CAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AACE,QAAA,GAAG,iBAAUA,EAAV,CADL;AAEE,QAAA,CAAC,EAAEM,CAFL;AAGE,QAAA,SAAS,+BAAwBN,EAAxB,CAHX;AAIE,QAAA,IAAI,EAAET,IAJR;AAKE,QAAA,MAAM,EAAC,SALT;AAME,QAAA,WAAW,EAAE,GANf;AAOE,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACI,WAAL,CAAiBK,EAAjB,CAAN;AAAA,SAPX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,CADF;AAgBD;;;;EAlHoBd,S;;AAqHvB,eAAeC,UAAU,CAAEC,QAAF,CAAzB","sourcesContent":["import React, { Component } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport \"./Province.css\";\r\n\r\n// import * as d3 from 'd3';\r\n// const colors = [ '#8ce8ad', '#57e188', '#34c768', '#2db757', '#27acaa', '#42c9c2', '#60e6e1', '#93f0e6', '#87d3f2', '#4ebeeb', '#35a4e8', '#188ce5', '#542ea5', '#724bc3', '#9c82d4', '#c981b2', '#b14891', '#ff6d00', '#ff810a', '#ff9831', '#ffb46a', '#ff9a91', '#ff736a', '#f95d54', '#ff4136', '#c4c4cd' ];\r\n\r\nclass Province extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      fill: \"#3A5311\"\r\n    };\r\n    console.log(\"In Province\",this.props.option);\r\n    this.handleClick = this.handleClick.bind(this);\r\n    this.chRef = React.createRef();\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    if (this.props.selected !== this.props.id) {\r\n      if (this.state.fill === \"navy\") this.setState({ fill: \"red\" });\r\n    }\r\n  }\r\n\r\n  handleClick(id) {\r\n    console.log(id)\r\n    this.setState({ fill: \"green\" }); \r\n    this.props.onSelect(id);\r\n    this.props.history.push({pathname:'/visualization/'+id, state:id+'-'+this.props.option})  \r\n    // this.drawChart()\r\n  }\r\n\r\n//    // DrawChart\r\n//    drawChart(){\r\n//     const {data } = this.props;\r\n//     const svgContainer = d3.select(this.chRef.current).node();\r\n//     const width  = svgContainer.getBoundingClientRect().width;\r\n//     const height = width;\r\n//     const margin = 15;\r\n//     let radius = Math.min(width, height) / 2  - margin;\r\n//     // legend Position\r\n//     let legendPosition = d3.arc().innerRadius(radius/1.75).outerRadius(radius);\r\n\r\n//     // Create SVG\r\n//     const svg  = d3.select(this.chRef.current)\r\n//     .append('svg')\r\n//     .attr(\"width\", '20%')\r\n//     .attr(\"height\", '20%')\r\n//         .attr('viewBox', '0 0 ' + width + ' ' + width )\r\n//     //.attr('preserveAspectRatio','xMinYMin')\r\n//     .append(\"g\")\r\n//     .attr(\"transform\", \"translate(\" + Math.min(width,height) / 2 + \",\" + Math.min(width,height) / 2 + \")\");\r\n\r\n//     let pie = d3.pie()\r\n//         .value( d => d.value )\r\n//     let data_ready = pie(data)\r\n\r\n//     // Donut partition  \r\n//     svg\r\n//     .selectAll('whatever')\r\n//     .data(data_ready)\r\n//     .enter()\r\n//     .append('path')\r\n//     .attr('d', d3.arc()\r\n//         .innerRadius(radius/ 1.75)  // This is the size of the donut hole\r\n//         .outerRadius(radius)\r\n//     )\r\n//     .attr('fill',  (d) =>  colors[d.index] )\r\n//     .attr(\"stroke\", \"#fff\")\r\n//     .style(\"stroke-width\", \"2\")\r\n//     .style(\"opacity\", \"0.8\")\r\n\r\n\r\n//   // Legend group and legend name\r\n//    svg\r\n//     .selectAll('mySlices')\r\n//     .data(data_ready)\r\n//     .enter()\r\n//     .append('g')\r\n//     .attr(\"transform\", d => `translate(${legendPosition.centroid(d)})`)\r\n//     .attr(\"class\", 'legend-g')\r\n//     .style(\"user-select\", \"none\")\r\n//     .append('text')\r\n//     .text(d =>  d.data.name)\r\n//     .style(\"text-anchor\", \"middle\")\r\n//     .style(\"font-weight\", 700)\r\n//     .style(\"fill\", '#222')\r\n//     .style(\"font-size\", 14);\r\n\r\n//    //Label for value\r\n//     svg\r\n//     .selectAll('.legend-g')\r\n//     .append('text')\r\n//     .text((d)=>{ return  d.data.value})\r\n//     .style(\"fill\", '#444')\r\n//     .style(\"font-size\", 12)\r\n//     .style(\"text-anchor\", \"middle\")\r\n//     .attr(\"y\", 16 );\r\n// }\r\n\r\n\r\n  render() {\r\n    const { fill } = this.state;\r\n    const { id, d } = this.props;\r\n\r\n    return (\r\n      <svg>\r\n        <g key={`g-${id}`}>\r\n          <path\r\n            key={`path-${id}`}\r\n            d={d}\r\n            className={`province province__${id}`}\r\n            fill={fill}\r\n            stroke=\"#838383\"\r\n            strokeWidth={1.5}\r\n            onClick={() => this.handleClick(id)}\r\n          />\r\n          {/* <div ref={this.chRef}></div>  */}\r\n        </g>\r\n      </svg>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter (Province);\r\n"]},"metadata":{},"sourceType":"module"}