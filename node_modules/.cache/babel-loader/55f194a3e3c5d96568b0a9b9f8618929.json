{"ast":null,"code":"import _classCallCheck from \"/Users/deeppatel/Desktop/Visualization/Project/csci6406_project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/deeppatel/Desktop/Visualization/Project/csci6406_project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/deeppatel/Desktop/Visualization/Project/csci6406_project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/deeppatel/Desktop/Visualization/Project/csci6406_project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Users/deeppatel/Desktop/Visualization/Project/csci6406_project/src/components/donutChart.js\";\nimport React, { Component } from 'react';\nimport * as d3 from 'd3';\nimport d3moji from 'd3moji';\nvar colors = ['#8ce8ad', '#57e188', '#34c768', '#2db757', '#27acaa', '#42c9c2', '#60e6e1', '#93f0e6', '#87d3f2', '#4ebeeb', '#35a4e8', '#188ce5', '#542ea5', '#724bc3', '#9c82d4', '#c981b2', '#b14891', '#ff6d00', '#ff810a', '#ff9831', '#ffb46a', '#ff9a91', '#ff736a', '#f95d54', '#ff4136', '#c4c4cd'];\n\nvar DonutChart = /*#__PURE__*/function (_Component) {\n  _inherits(DonutChart, _Component);\n\n  var _super = _createSuper(DonutChart);\n\n  function DonutChart(props) {\n    var _this;\n\n    _classCallCheck(this, DonutChart);\n\n    _this = _super.call(this, props);\n    _this.chRef = React.createRef();\n    return _this;\n  } // Chart load after component Mount\n\n\n  _createClass(DonutChart, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.drawChart();\n    } // DrawChart\n\n  }, {\n    key: \"drawChart\",\n    value: function drawChart() {\n      // Create dummy data\n      var data = this.props.data; // console.log(data)\n      // set the dimensions and margins of the graph\n\n      var width = 450,\n          height = 450,\n          margin = 40; // The radius of the pieplot is half the width or half the height (smallest one). I subtract a bit of margin.\n\n      var radius = Math.min(width, height) / 2 - margin; // append the svg object to the div called 'my_dataviz'\n\n      var svg = d3.select(\"#my_dataviz\").append(\"svg\").attr(\"width\", width).attr(\"height\", height).append(\"g\").attr(\"transform\", \"translate(\" + width / 2 + \",\" + height / 2 + \")\"); // set the color scale\n\n      var color = d3.scaleOrdinal().domain(data).range([\"#98abc5\", \"#98abc5\", \"#8a89a6\", \"#7b6888\", \"#6b486b\", \"#a05d56\", \"#6b486b\", \"#6b486b\", \"#6b486b\", \"#6b486b\", \"#98abc5\", \"#8a89a6\", \"#7b6888\", \"#6b486b\", \"#a05d56\"]); // Compute the position of each group on the pie:\n\n      var pie = d3.pie().value(function (d) {\n        return d.percentage;\n      });\n      var data_ready = d3.pie(data); // console.log(data_ready)\n      // Build the pie chart: Basically, each part of the pie is a path that we build using the arc function.\n\n      svg.selectAll('whatever').data(data_ready).enter().append('path').attr('d', d3.arc().innerRadius(100) // This is the size of the donut hole\n      .outerRadius(radius)).attr('fill', function (d) {\n        return color(d.data.province);\n      }).attr(\"stroke\", \"black\").style(\"stroke-width\", \"2px\").style(\"opacity\", 0.7);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n        id: \"my_dataviz\",\n        ref: this.chRef,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"script\", {\n        src: \"/Users/deeppatel/Desktop/Visualization/Project/csci6406_project/node_modules/d3/dist/d3.js\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"script\", {\n        src: \"/Users/deeppatel/Desktop/Visualization/Project/csci6406_project/node_modules/d3moji/d3moji.js\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }\n      }));\n    }\n  }]);\n\n  return DonutChart;\n}(Component);\n\nexport default DonutChart;","map":{"version":3,"sources":["/Users/deeppatel/Desktop/Visualization/Project/csci6406_project/src/components/donutChart.js"],"names":["React","Component","d3","d3moji","colors","DonutChart","props","chRef","createRef","drawChart","data","width","height","margin","radius","Math","min","svg","select","append","attr","color","scaleOrdinal","domain","range","pie","value","d","percentage","data_ready","selectAll","enter","arc","innerRadius","outerRadius","province","style"],"mappings":"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","sourcesContent":["import React , { Component} from 'react';\nimport * as d3 from 'd3';\nimport d3moji from 'd3moji'\nconst colors = [ '#8ce8ad', '#57e188', '#34c768', '#2db757', '#27acaa', '#42c9c2', '#60e6e1', '#93f0e6', '#87d3f2', '#4ebeeb', '#35a4e8', '#188ce5', '#542ea5', '#724bc3', '#9c82d4', '#c981b2', '#b14891', '#ff6d00', '#ff810a', '#ff9831', '#ffb46a', '#ff9a91', '#ff736a', '#f95d54', '#ff4136', '#c4c4cd' ];\n \nclass DonutChart extends Component {\n\n    constructor(props) {\n        super(props);\n        this.chRef = React.createRef();\n    }\n \n    // Chart load after component Mount\n    componentDidMount() {\n        this.drawChart()\n    }\n \n    // DrawChart\n    drawChart(){\n        // Create dummy data\n        const {data} = this.props;\n        // console.log(data)\n\n        // set the dimensions and margins of the graph\n        var width = 450, height = 450, margin = 40\n\n        // The radius of the pieplot is half the width or half the height (smallest one). I subtract a bit of margin.\n        var radius = Math.min(width, height) / 2 - margin\n\n        // append the svg object to the div called 'my_dataviz'\n        var svg = d3.select(\"#my_dataviz\")\n        .append(\"svg\")\n        .attr(\"width\", width)\n        .attr(\"height\", height)\n        .append(\"g\")\n        .attr(\"transform\", \"translate(\" + width / 2 + \",\" + height / 2 + \")\");\n\n\n        // set the color scale\n        var color = d3.scaleOrdinal()\n        .domain(data)\n        .range([\"#98abc5\",\"#98abc5\", \"#8a89a6\", \"#7b6888\", \"#6b486b\", \"#a05d56\", \"#6b486b\", \"#6b486b\", \"#6b486b\", \"#6b486b\", \"#98abc5\", \"#8a89a6\", \"#7b6888\", \"#6b486b\", \"#a05d56\"])\n\n        // Compute the position of each group on the pie:\n        var pie = d3.pie()\n        .value(function(d) { return d.percentage; })\n        var data_ready = d3.pie(data)\n        // console.log(data_ready)\n        // Build the pie chart: Basically, each part of the pie is a path that we build using the arc function.\n        svg\n        .selectAll('whatever')\n        .data(data_ready)\n        .enter()\n        .append('path')\n        .attr('d', d3.arc()\n        .innerRadius(100)         // This is the size of the donut hole\n        .outerRadius(radius)\n        )\n        .attr('fill', function(d){ return(color(d.data.province)) })\n        .attr(\"stroke\", \"black\")\n        .style(\"stroke-width\", \"2px\")\n        .style(\"opacity\", 0.7)\n    } \n \n    render() {\n        return <>\n            <div id=\"my_dataviz\" ref={this.chRef}></div> \n            {/* <div ></div>  */}\n            <script src=\"/Users/deeppatel/Desktop/Visualization/Project/csci6406_project/node_modules/d3/dist/d3.js\"></script>\n            <script src=\"/Users/deeppatel/Desktop/Visualization/Project/csci6406_project/node_modules/d3moji/d3moji.js\"></script>\n            \n        </>\n    }\n}\n \nexport default DonutChart;\n"]},"metadata":{},"sourceType":"module"}