{"ast":null,"code":"import _classCallCheck from \"/Users/deeppatel/Desktop/Visualization/Project/csci6406_project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/deeppatel/Desktop/Visualization/Project/csci6406_project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Users/deeppatel/Desktop/Visualization/Project/csci6406_project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/deeppatel/Desktop/Visualization/Project/csci6406_project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/deeppatel/Desktop/Visualization/Project/csci6406_project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Users/deeppatel/Desktop/Visualization/Project/csci6406_project/src/components/Province.js\";\nimport React, { Component } from \"react\";\nimport \"./Province.css\";\n\nvar Province = /*#__PURE__*/function (_Component) {\n  _inherits(Province, _Component);\n\n  var _super = _createSuper(Province);\n\n  function Province(props) {\n    var _this;\n\n    _classCallCheck(this, Province);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      fill: \"#FFCCCC\"\n    };\n    _this.handleClick = _this.handleClick.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Province, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      if (this.props.selected !== this.props.id) {\n        if (this.state.fill === \"navy\") this.setState({\n          fill: \"red\"\n        });\n      }\n    }\n  }, {\n    key: \"handleClick\",\n    value: function handleClick(id) {\n      this.setState({\n        fill: \"green\"\n      });\n      this.props.onSelect(id);\n    } // DrawChart\n\n  }, {\n    key: \"drawChart\",\n    value: function drawChart() {\n      var data = this.props.data;\n      var svgContainer = d3.select(this.chRef.current).node();\n      var width = svgContainer.getBoundingClientRect().width;\n      var height = width;\n      var margin = 15;\n      var radius = Math.min(width, height) / 2 - margin; // legend Position\n\n      var legendPosition = d3.arc().innerRadius(radius / 1.75).outerRadius(radius); // Create SVG\n\n      var svg = d3.select(this.chRef.current).append('svg').attr(\"width\", '20%').attr(\"height\", '20%').attr('viewBox', '0 0 ' + width + ' ' + width) //.attr('preserveAspectRatio','xMinYMin')\n      .append(\"g\").attr(\"transform\", \"translate(\" + Math.min(width, height) / 2 + \",\" + Math.min(width, height) / 2 + \")\");\n      var pie = d3.pie().value(function (d) {\n        return d.value;\n      });\n      var data_ready = pie(data); // Donut partition  \n\n      svg.selectAll('whatever').data(data_ready).enter().append('path').attr('d', d3.arc().innerRadius(radius / 1.75) // This is the size of the donut hole\n      .outerRadius(radius)).attr('fill', function (d) {\n        return colors[d.index];\n      }).attr(\"stroke\", \"#fff\").style(\"stroke-width\", \"2\").style(\"opacity\", \"0.8\"); // Legend group and legend name\n\n      svg.selectAll('mySlices').data(data_ready).enter().append('g').attr(\"transform\", function (d) {\n        return \"translate(\".concat(legendPosition.centroid(d), \")\");\n      }).attr(\"class\", 'legend-g').style(\"user-select\", \"none\").append('text').text(function (d) {\n        return d.data.name;\n      }).style(\"text-anchor\", \"middle\").style(\"font-weight\", 700).style(\"fill\", '#222').style(\"font-size\", 14); //Label for value\n\n      svg.selectAll('.legend-g').append('text').text(function (d) {\n        return d.data.value;\n      }).style(\"fill\", '#444').style(\"font-size\", 12).style(\"text-anchor\", \"middle\").attr(\"y\", 16);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var fill = this.state.fill;\n      var _this$props = this.props,\n          id = _this$props.id,\n          d = _this$props.d;\n      return /*#__PURE__*/React.createElement(\"g\", {\n        key: \"g-\".concat(id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"path\", {\n        key: \"path-\".concat(id),\n        d: d,\n        className: \"province province__\".concat(id),\n        fill: fill,\n        stroke: \"#838383\",\n        strokeWidth: 1.5,\n        onClick: function onClick() {\n          return _this2.handleClick(id);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        ref: this.chRef,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return Province;\n}(Component);\n\nexport default Province;","map":{"version":3,"sources":["/Users/deeppatel/Desktop/Visualization/Project/csci6406_project/src/components/Province.js"],"names":["React","Component","Province","props","state","fill","handleClick","bind","selected","id","setState","onSelect","data","svgContainer","d3","select","chRef","current","node","width","getBoundingClientRect","height","margin","radius","Math","min","legendPosition","arc","innerRadius","outerRadius","svg","append","attr","pie","value","d","data_ready","selectAll","enter","colors","index","style","centroid","text","name"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./Province.css\";\r\n\r\nclass Province extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      fill: \"#FFCCCC\"\r\n    };\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    if (this.props.selected !== this.props.id) {\r\n      if (this.state.fill === \"navy\") this.setState({ fill: \"red\" });\r\n    }\r\n  }\r\n\r\n  handleClick(id) {\r\n    this.setState({ fill: \"green\" });\r\n\r\n    this.props.onSelect(id);\r\n  }\r\n\r\n   // DrawChart\r\n   drawChart(){\r\n    const {data } = this.props;\r\n    const svgContainer = d3.select(this.chRef.current).node();\r\n    const width  = svgContainer.getBoundingClientRect().width;\r\n    const height = width;\r\n    const margin = 15;\r\n    let radius = Math.min(width, height) / 2  - margin;\r\n    // legend Position\r\n    let legendPosition = d3.arc().innerRadius(radius/1.75).outerRadius(radius);\r\n\r\n    // Create SVG\r\n    const svg  = d3.select(this.chRef.current)\r\n    .append('svg')\r\n    .attr(\"width\", '20%')\r\n    .attr(\"height\", '20%')\r\n        .attr('viewBox', '0 0 ' + width + ' ' + width )\r\n    //.attr('preserveAspectRatio','xMinYMin')\r\n    .append(\"g\")\r\n    .attr(\"transform\", \"translate(\" + Math.min(width,height) / 2 + \",\" + Math.min(width,height) / 2 + \")\");\r\n\r\n    let pie = d3.pie()\r\n        .value( d => d.value )\r\n    let data_ready = pie(data)\r\n\r\n    // Donut partition  \r\n    svg\r\n    .selectAll('whatever')\r\n    .data(data_ready)\r\n    .enter()\r\n    .append('path')\r\n    .attr('d', d3.arc()\r\n        .innerRadius(radius/ 1.75)  // This is the size of the donut hole\r\n        .outerRadius(radius)\r\n    )\r\n    .attr('fill',  (d) =>  colors[d.index] )\r\n    .attr(\"stroke\", \"#fff\")\r\n    .style(\"stroke-width\", \"2\")\r\n    .style(\"opacity\", \"0.8\")\r\n\r\n\r\n  // Legend group and legend name\r\n   svg\r\n    .selectAll('mySlices')\r\n    .data(data_ready)\r\n    .enter()\r\n    .append('g')\r\n    .attr(\"transform\", d => `translate(${legendPosition.centroid(d)})`)\r\n    .attr(\"class\", 'legend-g')\r\n    .style(\"user-select\", \"none\")\r\n    .append('text')\r\n    .text(d =>  d.data.name)\r\n    .style(\"text-anchor\", \"middle\")\r\n    .style(\"font-weight\", 700)\r\n    .style(\"fill\", '#222')\r\n    .style(\"font-size\", 14);\r\n\r\n   //Label for value\r\n    svg\r\n    .selectAll('.legend-g')\r\n    .append('text')\r\n    .text((d)=>{ return  d.data.value})\r\n    .style(\"fill\", '#444')\r\n    .style(\"font-size\", 12)\r\n    .style(\"text-anchor\", \"middle\")\r\n    .attr(\"y\", 16 );\r\n}\r\n\r\n\r\n  render() {\r\n    const { fill } = this.state;\r\n    const { id, d } = this.props;\r\n\r\n    return (\r\n      <g key={`g-${id}`}>\r\n        <path\r\n          key={`path-${id}`}\r\n          d={d}\r\n          className={`province province__${id}`}\r\n          fill={fill}\r\n          stroke=\"#838383\"\r\n          strokeWidth={1.5}\r\n          onClick={() => this.handleClick(id)}\r\n        />\r\n        <div ref={this.chRef}></div> \r\n      </g>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default Province;\r\n"]},"metadata":{},"sourceType":"module"}